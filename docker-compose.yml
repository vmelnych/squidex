version: '3.8'
services:
  squidex_mongo:
    image: ${MONGO_IMAGE}
    container_name: ${MONGO_CONTAINER}
    volumes:
      - mongodb_data:/data/db
      - ${EXT_BACKUP:-./backup}:${INT_BACKUP:-/data/backup}
    networks:
      - internal
    restart: unless-stopped

  squidex_squidex:
    image: ${SQUIDEX_IMAGE}
    container_name: ${SQUIDEX_CONTAINER}
    ports:
      - ${SQUIDEX_PORT}:80
    environment:
      - URLS__BASEURL=${SQUIDEX_PROTOCOL}://${SQUIDEX_DOMAIN}/
      - URLS__ENFORCEHTTPS=${SQUIDEX_FORCE_HTTPS}
      - EVENTSTORE__MONGODB__CONFIGURATION=mongodb://squidex_mongo
      - STORE__MONGODB__CONFIGURATION=mongodb://squidex_mongo
      - IDENTITY__ADMINEMAIL=${SQUIDEX_ADMINEMAIL}
      - IDENTITY__ADMINPASSWORD=${SQUIDEX_ADMINPASSWORD}
      - IDENTITY__GOOGLECLIENT=${SQUIDEX_GOOGLECLIENT}
      - IDENTITY__GOOGLESECRET=${SQUIDEX_GOOGLESECRET}
      - IDENTITY__GITHUBCLIENT=${SQUIDEX_GITHUBCLIENT}
      - IDENTITY__GITHUBSECRET=${SQUIDEX_GITHUBSECRET}
      - IDENTITY__MICROSOFTCLIENT=${SQUIDEX_MICROSOFTCLIENT}
      - IDENTITY__MICROSOFTSECRET=${SQUIDEX_MICROSOFTSECRET}
      - LETSENCRYPT_HOST=${SQUIDEX_DOMAIN}
      - LETSENCRYPT_EMAIL=${SQUIDEX_ADMINEMAIL}
    depends_on:
      - squidex_mongo
    volumes:
      - /etc/squidex/assets:/app/Assets
    networks:
      - internal
    restart: unless-stopped

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    environment:
      - ME_CONFIG_MONGODB_SERVER=${MONGO_CONTAINER}
      - ME_CONFIG_MONGODB_PORT=27017
    networks:
      - internal
    depends_on:
      - squidex_mongo
    ports:
      - ${MONGOEXPRESS_PORT}:8081

volumes:
  mongodb_data:


networks:
  internal:
    driver: bridge
